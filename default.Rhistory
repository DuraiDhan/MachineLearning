libray(caret)
library(caret)
library(caret)
update.package(checkBuilt = TRUE)
update.package(checkBuilt = TRUE)
install.packages(c("gridExtra", "gtable", "Hmisc", "MCMCpack", "nlme", "RcppEigen", "scales"))
install.packages(c("base64enc", "boot", "chron", "class", "cluster", "codetools", "curl", "data.table", "digest", "foreign", "formatR", "ggplot2", "gridExtra", "gtable", "highr", "Hmisc", "htmltools", "httr", "jsonlite", "KernSmooth", "knitr", "lattice", "latticeExtra", "lubridate", "MASS", "Matrix", "memoise", "mgcv", "mime", "munsell", "nlme", "nnet", "packrat", "PKI", "R6", "Rcpp", "RCurl", "rmarkdown", "rpart", "rstudioapi", "scales", "spatial", "stringi", "survival"), lib="C:/Durai/R-3.2.0/library")
library(caret)
train <- read.csv("pml-training.csv")
test <- read.csv("pml-testing.csv")
M <- cor(train);
train
nzv<- nearZeroVar(train)
train<- train[,-nzv]
nzv<- nearZeroVar(train)
train<- train[,-nzv]
M <- cor(train);
train
head(train)
nzv
train <- read.csv("pml-training.csv")
train
nzv<- nearZeroVar(train)
nzv
train<- train[,-nzv]
train
train
head(train)
M <- cor(train);
corrPlot <- cor(train[, -length(names(train))])
names(train)
treeModel <- rpart(classe ~ ., data=traingroup, method="class")
library(rpart)
prp(treeModel)
library(rpart)
prp(treeModel)
plot(treeModel)
treeModel <- rpart(classe ~ ., data=traingroup, method="class")
group <- createDataPartition(y=train$classe, p=0.8, list=F)
testgroup <- train[group, ]
traingroup <- train[-group, ]
treeModel <- rpart(classe ~ ., data=traingroup, method="class")
prp(treeModel)
plot(treeModel)
treeModel
text(treeModel,use.n=TRUE)
isna <-sapply(train, function(x) any(is.na(x) | x==""))
pred<-names(!isna)
pred
isna <-sapply(train, function(x) any(is.na(x) | x==""))
matchcols(train, with=c("belt", "arm" ,"dumbbell"),
without=isna,
method="or"
)
library(gdata)
matchcols(train, with=c("belt", "arm" ,"dumbbell"),
without=isna,
method="or"
)
matchcols(train, with=c("belt", "arm" ,"dumbbell"),
method="or"
)
traindata = read.csv("pml-training.csv",header=TRUE, na.strings=c("NA","#DIV/0!",""))
traindata1<- traindata[,-(1:5)]
isna <-sapply(train, function(x) any(is.na(x) | x==""))
matchcols(traindata1, with=c("belt", "arm" ,"dumbbell"),
without=isna,
method="or"
)
matchcols(traindata)
matchcols(traindata ,without=[])
matchcols(traindata , method="or")
matchcols(traindata1, with=c("belt", "arm" ,"dumbbell"),
without=isna,
method="or"
)
matchcols(traindata1, with=c("belt", "arm" ,"dumbbell"),
without="",
method="or"
)
matchcols(traindata1, with=c("belt", "arm" ,"dumbbell"),
method="or"
)
matchcols(traindata, with=c("belt", "arm" ,"dumbbell"),
method="or"
)
isna <-sapply(traindata1, function(x) any(is.na(x) ))
matchcols(traindata1, with=c("belt", "arm" ,"dumbbell"),
without=isna,
method="or"
)
traindata1<- traindata[,-(1:5)]
testdata1<- testdata[,-(1:5)]
traindata = read.csv("pml-training.csv",header=TRUE, na.strings=c("NA","#DIV/0!",""))
testdata = read.csv("pml-testing.csv",header=TRUE, na.strings=c("NA","#DIV/0!",""))
traindata1<- traindata[,-(1:5)]
testdata1<- testdata[,-(1:5)]
isna <-sapply(traindata1, function(x) any(is.na(x) ))
matchcols(traindata1, with=c("belt", "arm" ,"dumbbell"),
without=isna,
method="or"
)
isna
isna <-sapply(traindata1, function(x) any(is.na(x) ))
matchcols(traindata1, with=c("belt", "arm" ,"dumbbell"),
without=isna,
method="or"
)
isna <-sapply(traindata1, function(x) any(is.na(x) ))
matchcols(traindata1, with=c("belt", "arm" ,"dumbbell", "accel"),
without=isna,
method="or"
)
traindata = read.csv("pml-training.csv",header=TRUE, na.strings=c("NA","#DIV/0!",""))
testdata = read.csv("pml-testing.csv",header=TRUE, na.strings=c("NA","#DIV/0!",""))
traindata1<- traindata[,-(1:5)]
testdata1<- testdata[,-(1:5)]
isna <-sapply(traindata1, function(x) any(is.na(x) ))
matchcols(traindata1, with=c("belt", "arm" ,"dumbbell", "accel"),
without=isna,
method="or"
)
isna
matchcols(traindata1, with=c("belt", "arm" ,"dumbbell", "accel"),
method="or"
)
traindata1<- traindata[,-(1:5)]
testdata1<- testdata[,-(1:5)]
matchcols(traindata1, with=c("belt", "arm" ,"dumbbell", "accel"),
method="or"
)
isna <-sapply(traindata1, function(x) any(is.na(x) ))
matchcols(traindata1, with=c("belt", "arm" ,"dumbbell", "accel"),
without=c(""),
method="or"
)
matchcols(traindata1, with=c("belt", "arm" ,"dumbbell", "accel"),
without=c(""),
method="or"
)
head(traindata1)
names(traindata1)
matchcols(traindata1, with=c("belt", "arm" ,"dumbbell", "accel"),
method="or"
)
matchcols(traindata1, with=c("belt", "arm" ,"dumbbell", "accel"),
method="oneof"
)
matchcols(traindata1, with=c("*belt*", "*arm*" ,"*dumbbell*", "*accel*"),
method="or"
)
names(traindata1)
matchcols(traindata1, with=c("*belt*", "*arm*" ,"*dumbbell*", "*accel*")        )
matchcols(traindata1, with=c("*belt*", "*arm*" ,"*dumbbell*", "*accel*")        )
matchcols(traindata1, with=c("*belt*", "*arm*" ,"*dumbbell*")        )
matchcols(traindata1, with=c(grep("belt", "arm" ,"dumbbell")        )
matchcols(traindata1, with=c(grep("belt", "arm" ,"dumbbell")        )
)
matchcols(traindata1, with=c(grep("belt", "arm" ,"dumbbell")))
matchcols(traindata1, with=grep("belt", "arm" ,"dumbbell"))
grep(names(traindata1),"belt| arm")
cols<-grepl("belt | arm |dumbbell")
cols<-grepl("belt | arm |dumbbell",names(ttraindata1))
cols<-grepl("belt | arm |dumbbell",names(traindata1))
cols
matchcols(traindata1,with=cols)
gregexpr("belt | arm",names(traindata1))
grep("belt | arm",names(traindata1))
grepl("belt | arm",names(traindata1))
grep("^belt",names(traindata1))
gregexpr("belt | arm",names(traindata1))
grep("dum",names(traindata1))
traindata1[grep("dum",names(traindata1))]
names(traindata1[grep("dum",names(traindata1))])
names(traindata1[grep("dum|bar",names(traindata1))])
names(traindata1[grep("dum|^bar",names(traindata1))])
names(traindata1[grep(["arm","dum"],names(traindata1))])
names(traindata1[grep("dum|^bar",names(traindata1))])
names(traindata1[grep(["dum|^bar"],names(traindata1))])
names(traindata1[grep("^dum^|^bar^",names(traindata1))])
names(traindata1[grep("dum",names(traindata1))])
names(traindata1[grep("dum\|bar",names(traindata1))])
names(traindata1[grep('dum\|bar',names(traindata1))])
names(traindata1[grep('dum|bar',names(traindata1))])
names(traindata1[grep('dum''bar',names(traindata1))])
names(traindata1[grep(-w 'dum\|bar\',names(traindata1))])
names(traindata1[grep('dum\|bar\',names(traindata1))])
names(traindata1[grep("dum|bar",names(traindata1))])
names(traindata1[grep("dum",names(traindata1))])
names(traindata1[grep({"dum"},names(traindata1))])
names(traindata1[grep({"dum","bar"},names(traindata1))])
names(traindata1[grep({"dum"|"bar"},names(traindata1))])
names(traindata1[grep({"dum" or"bar"},names(traindata1))])
names(traindata1[grep("dum" |"bar",names(traindata1))])
names(traindata1[grep('belt|[arm]',names(traindata1))])
names(traindata1[grep('belt|arm',names(traindata1))])
names(traindata1[grep('belt|arm|dumbbel',names(traindata1))])
names(traindata1[grep('belt|arm|dumbbel|accel',names(traindata1))])
names(traindata1[grep("dum|bar",names(traindata1))])
names(traindata1[grep("dum|bar",names(traindata1))])
names(traindata1[grep('belt|arm|dumbbel|accel',names(traindata1))])
isempty<-sapply(traindata1,function (x)x=="")
isempty<-sapply(traindata1,function (x) any(x==""))
isempty
matchcols(traindata1, with=c("belt", "arm" ,"dumbbell", "accel"),
without=isempty,
method="or"
)
matchcols(traindata1, with=c("belt", "arm" ,"dumbbell", "accel"),
method="or"
)
names(traindata1[grep("dum|bar",names(traindata1))])
names(traindata1[grep('belt|arm|dumbbel|accel',names(traindata1))])
isempty<-sapply(traindata1,function (x) any(x==""))
matchcols(traindata1, with=
names(traindata1[grep('belt|arm|dumbbel|accel',names(traindata1))]),
without=isempty,
method="or")
isempty<-sapply(traindata1,function (x) any(x==""))
isempty
names(isempty)
matchcols(traindata1,
with= names(traindata1[grep('belt|arm|dumbbel|accel',names(traindata1))]),
without=!isempty,
method="or")
names(!isepmty)
isempty
names(!isepmty)
names(!isempty)
names(!isempty)  traindata1<- traindata[,-(1:5)]
testdata1<- testdata[,-(1:5)]
nzv<- nearZeroVar(traindata1)
traindata2<- traindata1[,-nzv]
traindata2
set.seed(12345)
inTrain <- createDataPartition(y=training$classe, p=0.6, list=FALSE)
inTrain <- createDataPartition(y=traindata2$classe, p=0.6, list=FALSE)
traindata<- traindata[,-(1:5)]
testdata<- testdata[,-(1:5)]
nzv<- nearZeroVar(traindata)
traindata<- traindata[,-nzv]
set.seed(12345)
subset <- createDataPartition(y=training$classe, p=0.6, list=FALSE)
subsettrain <- training[subset, ]
subsettest <- training[-subset, ]
subset <- createDataPartition(y=training$classe, p=0.6, list=FALSE)
subset <- createDataPartition(y=traindata$classe, p=0.6, list=FALSE)
subsettrain <- traindata[subset, ]
subsettest <- traindata[-subset, ]
dim(subsettrain)
modFitA1 <- rpart(classe ~ ., data=subsettrain, method="class")
fancyRpartPlot(modFitA1)
library(rattle)
fancyRpartPlot(modFitA1)
library(rpart)
fancyRpartPlot(modFitA1)
library(rpart)
library(rpart.plot)
library(RColorBrewer)
fancyRpartPlot(modFitA1)
library(rattle)
fancyRpartPlot(modFitA1)
install.packages(rpart.plot)
install.packages("rpart.plot")
fancyRpartPlot(modFitA1)
modFitSet1 <- rpart(classe ~ ., data=subsettrain, method="class")
fancyRpartPlot(modFitSet1)
modFitSet1 <- rpart(classe ~ ., data=subsettrain, method="class")
fancyRpartPlot(modFitSet1)
predictionsSet2 <- randomForest(classe ~. , data=subsettrain)
library(randomForest)
predictionsSet2 <- randomForest(classe ~. , data=subsettrain)
subsettrain
train
traindata
traindata = read.csv("pml-training.csv",header=TRUE, na.strings=c("NA","#DIV/0!",""))
traindata
traindata = read.csv("pml-training.csv",header=TRUE, na.strings=c("NA","#DIV/0!",""), na.rm=TRUE)
traindata2<-na.omit(traindata)
traindata2
traindata2<-na.omit(traindata)
head(traindata2)
traindata2<-na.omit(traindata)
traindata
traindata2
traindata = read.csv("pml-training.csv",header=TRUE, na.strings=c("NA","#DIV/0!",""))
traindata
predictionsSet2 <- randomForest(classe ~. , data=subsettrain)
NAfilter <- apply(traindata,1,function(x){sum(is.na(x))})
NAfilter
traindata <-traindata[,which(NAfilter==0)]
traindata
traindata<- traindata[,-nzv]
traindata
traindata = read.csv("pml-training.csv",header=TRUE, na.strings=c("NA","#DIV/0!",""))
traindata<- traindata[,-(1:5)]
testdata<- testdata[,-(1:5)]
nzv<- nearZeroVar(traindata)
traindata<- traindata[,-nzv]
traindata
NAfilter <- apply(traindata,1,function(x){sum(is.na(x))})
traindata1 <-traindata[,which(NAfilter==0)]
traindata1 <-traindata
traindata1 <-traindata1[,which(NAfilter==0)]
traindata1
names(traindata1)
traindata1 <-traindata1[,which(NAfilter==0)]
NAfilter
Realtest<-read.csv("pml-training.csv",header=T, sep=",", na.strings = c("NA",""))
Realtest
NAS<-apply(Realtest,2,function(x){sum(is.na(x))})
Realtest<-Realtest[,which(NAS==0)]
Realtest
traindata<- traindata[,-(1:5)]
testdata<- testdata[,-(1:5)]
nzv<- nearZeroVar(traindata)
traindata<- traindata[,-nzv]
NAfilter <- apply(traindata,1,function(x){sum(is.na(x))})
traindata1<-traindata
traindata1<-traindata1[,which(NAfilter==0)]
NAfilter <- apply(traindata,2,function(x){sum(is.na(x))})
traindata1<-traindata1[,which(NAfilter==0)]
traindata1
NAfilter
NAfilter <- apply(traindata,2,function(x){sum(is.na(x))})
NAfilter
traindata
traindata = read.csv("pml-training.csv",header=TRUE, na.strings=c("NA","#DIV/0!",""))
NAfilter <- apply(traindata,2,function(x){sum(is.na(x))})
NAfilter
traindata<-traindata[,which(NAfilter==0)]
traindata
NAfilter <- apply(traindata,1,function(x){sum(is.na(x))})
traindata <-traindata[,which(NAfilter==0)]
traindata <-traindata[,which(NAfilter==0)]
traindata = read.csv("pml-training.csv",header=TRUE, na.strings=c("NA","#DIV/0!",""))
NAfilter <- apply(traindata,2,function(x){sum(is.na(x))})
traindata<-traindata[,which(NAfilter== 0)]
traindata
traindata<-traindata[,c(1:6)]
traindata
NAfilter <- apply(traindata,1,function(x){sum(is.na(x) )})
subsettrain
NAfilter <- apply(subsettrain,1,function(x){sum(is.na(x) )})
subsettrain <-subsettrain[,which(NAfilter >20)]
NAfilter
which(NAfilter >20)
subsettrain[,which(NAfilter >20)]
subsettrain
head(subsettrainb)
head(subsettrain)
names(subsettrain)
names(subsettrain)
NAfilter <- apply(subsettrain,1,function(x){sum(is.na(x) )})
subsettrain <-subsettrain[,which(NAfilter ==0)]
names(subsettrain)
head(subsettrain)
subsettrain[,which(NAfilter ==0)]
NAfilter
subsettrain[,which(NAfilter > 30)]
NAfilter >30
NAfilter ==0
NAfilter >30
subsettrain <-subsettrain[,which(NAfilter ==0)]
traindata = read.csv("pml-training.csv",header=TRUE, na.strings=c("NA","#DIV/0!",""))
NAfilter <- apply(traindata,2,function(x){sum(is.na(x) )})
traindata <-traindata[,which(NAfilter ==0)]
traindata<-traindata[,c(1:6)]
traindata
subset <- createDataPartition(y=traindata$classe, p=0.6, list=FALSE)
traindata$classe
sum(is.na(traindata))
traindata = read.csv("pml-training.csv",header=TRUE, na.strings=c("NA","#DIV/0!",""))
traindata<- traindata[,-(1:5)]
testdata<- testdata[,-(1:5)]
nzv<- nearZeroVar(traindata)
traindata<- traindata[,-nzv]
sum(is.na(traindata))
head(traindata)
NAfilter <- apply(traindata,0,function(x){sum(is.na(x) )})
traindata = read.csv("pml-training.csv",header=TRUE, na.strings=c("NA","#DIV/0!",""))
traindata<- traindata[,-(1:5)]
testdata<- testdata[,-(1:5)]
nzv<- nearZeroVar(traindata)
traindata<- traindata[,-nzv]
NAfilter <- apply(traindata,0,function(x){sum(is.na(x) )})
NAfilter <- apply(traindata,1,function(x){sum(is.na(x) )})
traindata <-traindata[,which(NAfilter ==0)]
NAfilter <- apply(traindata,2,function(x){sum(is.na(x) )})
traindata <-traindata[,which(NAfilter ==0)]
traindata
sum(is.na(traindata))
print(predictionsRF)
traindata = read.csv("pml-training.csv",header=TRUE, na.strings=c("NA","#DIV/0!",""))
testdata = read.csv("pml-testing.csv",header=TRUE, na.strings=c("NA","#DIV/0!",""))
